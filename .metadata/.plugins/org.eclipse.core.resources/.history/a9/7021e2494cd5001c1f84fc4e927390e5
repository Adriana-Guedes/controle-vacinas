package com.controle.vacinas.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.controle.vacinas.constantes.Messages;
import com.controle.vacinas.dto.UsuarioDTO;
import com.controle.vacinas.service.UsuarioService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;






@Tag(name= Messages.SWAGGER_TAG_USUARIO_ENDPOINT ) //RECURSO DO SWAGGER PARA MODIFICAÇÕES NOS NOMES DA API
@RestController
@RequestMapping("usuarios")
@CrossOrigin(origins = " * ")
public class UsuarioController {
	
	
	@Autowired
	private UsuarioService usuarioService;
	
	
	@Operation(description = Messages.SWAGGER_GET_ALL)
	@GetMapping("")
	public ResponseEntity<List<UsuarioDTO>> getAll(){	
	return ResponseEntity.status(HttpStatus.OK).body(usuarioService.getAll());
		
	}

	@Operation(description = Messages.SWAGGER_GET_ID )
	@GetMapping("{id}")
	public ResponseEntity<UsuarioDTO> getOne(@PathVariable Integer id) {
	return ResponseEntity.status(HttpStatus.OK).body(usuarioService.getOne(id));
	}
	
	
	@Operation(description = Messages.SWAGGER_INSERT)
	@PostMapping("")
	public ResponseEntity<UsuarioDTO> save(@Valid @RequestBody  UsuarioDTO usuario)	{
	return ResponseEntity.status(HttpStatus.OK).body(usuarioService.save(usuario.toEntity()));
		
	}

	
	@Operation(description = Messages.SWAGGER_UPDATE)
	@PatchMapping("{id}")
	public ResponseEntity<UsuarioDTO> update(@PathVariable Integer id, @RequestBody UsuarioDTO usuario){
   return ResponseEntity.status(HttpStatus.OK).body(usuarioService.update(id, usuario.toEntity()));	
		
	}
	
	@Operation(description = Messages.SWAGGER_DELETE)
	@DeleteMapping("{id}")
	public ResponseEntity <Void> delete(@PathVariable Integer id) {

		return  ResponseEntity.ok().build();
		
		
		
		}
}