package com.controle.vacinas.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.controle.vacinas.constantes.Messages;
import com.controle.vacinas.dto.VacinaDTO;
import com.controle.vacinas.service.VacinaService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;



@Tag(name= Messages.SWAGGER_TAG_VACINA_ENDPOINT)
@RestController
@RequestMapping(value = "vacinas")
public class VacinaController {
	
	
	
	@Autowired
	private VacinaService vacinaService;
	
	@Operation(description = Messages.SWAGGER_GET_ALL)
	@GetMapping("")
	public ResponseEntity<List<VacinaDTO>> getAll(){
	return ResponseEntity.status(HttpStatus.OK).body(vacinaService.getAll());
		
	}

	@Operation(description = Messages.SWAGGER_GET_ID )
	@GetMapping("{id}")
	public ResponseEntity<VacinaDTO> getOne(@PathVariable int id) {
	return ResponseEntity.status(HttpStatus.OK).body(vacinaService.getOne(id));
	}
	
	
	@Operation(description = Messages.SWAGGER_INSERT)
	@PostMapping("")
	public ResponseEntity<VacinaDTO> save(@Valid @RequestBody  VacinaDTO vacina)	{
	return ResponseEntity.status(HttpStatus.OK).body(vacinaService.save(vacina.toEntity()));
		
	}

	
	@Operation(description = Messages.SWAGGER_UPDATE)
	@PatchMapping("{id}")
	public ResponseEntity<VacinaDTO> update(@PathVariable int id, @RequestBody VacinaDTO vacina){
   return ResponseEntity.status(HttpStatus.OK).body(vacinaService.update(id, vacina.toEntity()));	
		
	}
	
	
	@Operation(description = Messages.SWAGGER_DELETE)
	@DeleteMapping("{id}")
	public ResponseEntity <Void> delete(@PathVariable int id) {
	 return  ResponseEntity.ok().build();
		
		
		
		
		}
	
}





