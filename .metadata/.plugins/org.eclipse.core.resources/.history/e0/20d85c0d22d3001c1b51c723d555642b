package com.controle.vacinas.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.controle.vacinas.dto.UsuarioDTO;
import com.controle.vacinas.dto.VacinaDTO;
import com.controle.vacinas.entity.UsuarioEntity;
import com.controle.vacinas.entity.VacinaEntity;
import com.controle.vacinas.repository.UsuarioRepository;


@Service
public class UsuarioService {
	
	
	

	//INJEÇÃO DE DEPENDENCIA 
	@Autowired  
	private UsuarioRepository usuarioRepository;
	
	//METODO LISTAR TUDO
	public List<UsuarioDTO> getAll(){
		
	List<UsuarioEntity> lista = usuarioRepository.findAll();		
		List<UsuarioDTO> listaDTO = new ArrayList<>();	
		for (UsuarioEntity usuarioaEntity : lista) {			
			listaDTO.add(usuarioaEntity.toDTO()); //CONVERSOR ARRAY PARA STRING
		}
		
		return listaDTO;
	


 }
	
	public UsuarioDTO getOne(int id) {
		Optional<UsuarioEntity> optional = usuarioRepository.findById(id);
		UsuarioEntity usuario = optional.orElse( new UsuarioEntity());
		return usuario.toDTO();
	}
	
	
	public UsuarioDTO save(UsuarioEntity usuario) {		
		return usuarioRepository.save(usuario).toDTO();	
		
		
		
	}
	
	
	public UsuarioDTO update(int id, UsuarioEntity novoUsuario) {
		
		 //VERIFICAR SE O REGISTRO EXISTE
		Optional<UsuarioEntity> optional = usuarioRepository.findById(id);
	
		 //SE EXISTIR
		if(optional.isPresent() == true) {
			//PEGAR O OBJETO DENTRO O OPTIONAL VINDO DO BANCO E SETAR COM O VALOR DE ENTRADA DO PARAMETRO DA METODO
			UsuarioEntity usuarioBD = optional.get();
			usuarioBD.setNome(novoUsuario.getNome());
			usuarioBD.setCpf(novoUsuario.getCpf());
			usuarioBD.setData_Nasc(novoUsuario.getData_Nasc());
			usuarioBD.setEndereco(novoUsuario.getEndereco());
			usuarioBD.setTelefone(novoUsuario.getTelefone());
			
			return usuarioRepository.save(usuarioBD).toDTO();
		}
	
		else {
			return new UsuarioEntity().toDTO();
		}
	}
	
	
	
	public void delete(int id) {
		usuarioRepository.deleteById(id);
	}


}